knitr::opts_chunk$set(echo = TRUE)
#Set Working Directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Load Packages
library(readxl)
library(here)
library(tidyr)
library(ggplot2)
library(readxl)
library(dplyr)
library(visdat)
library(naniar)
library(ggplot2)
library(simputation)
library(fmsb)
library(rstatix)
library(ggpubr)
library(dlookr)
library(lubridate)
#Import Data
G1 <- read_xlsx(here("Data_Clean", "Elazığ Assesment Qustionnaire_G1.xlsx"))
G3 <- read_xlsx(here("Data_Clean", "Elazığ Assesment Qustionnaire_G3.xlsx"))
G3_1 <- read_xlsx(here("Data_Clean", "Elazığ Assesment Qustionnaire_G3_1.xlsx"))
G_K2 <- read_xlsx(here("Data_Clean", "Elazığ Assesment Qustionnaire_K2.xlsx"))
CD_WFP <- read_xlsx(here("Data_Clean", "Elazıg_need_assesment_data_clean_wfp.xlsx"))
CD <- read_xlsx(here("Data_Clean", "Elazıg_need_assesment_data_clean.xlsx"))
(table(CD_WFP$leave_camp_factor_other,useNA = "always"))
knitr::opts_chunk$set(echo = TRUE)
(table(CD_WFP$leave_camp_factor_other,useNA = "always"))
(table(CD_WFP$leave_camp_factor_other))
prop.table(table(CD_WFP$leave_camp_factor_other))
prop.table(table(CD_WFP$leave_camp_factor_other,na="Always"))
prop.table(table(CD_WFP$leave_camp_factor_other,NA="Always"))
prop.table(table(CD_WFP$leave_camp_factor_other,useNA="Always"))
prop.table(table(CD_WFP$leave_camp_factor_other,useNA="always"))
starwars
starwars %>%
mutate(name, bmi = mass / ((height / 100)  ^ 2)) %>%
select(name:mass, bmi)
starwars %>%
arrange(desc(mass))
flowers
wide_data <- data.frame(subject = c("A", "B", "C", "D"),
sex = c("M", "F", "F", "M"),
control = c(12.9, 5.2, 8.9, 10.5),
cond1 = c(14.2, 12.6, 12.1, 12.9),
cond2 = c(8.7, 10.1, 14.2, 11.9))
wide_data
library(reshape2)
library(reshape2)
my_long_df <- melt(data = wide_data, id.vars = c("subject", "sex"),
measured.vars = c("control", "cond1", "cond2"),
variable.name = "condition", value.name = "measurement")
my_long_df
my_wide_df
my_wide_df <- dcast(data = long_data, subject + sex ~ condition,
value.var = "measurement")
long_data <- data.frame(
subject = rep(c("A", "B", "C", "D"), each = 3),
sex = rep(c("M", "F", "F", "M"), each =3),
condition = rep(c("control", "cond1", "cond2"), times = 4),
measurement = c(12.9, 14.2, 8.7, 5.2, 12.6, 10.1, 8.9,
12.1, 14.2, 10.5, 12.9, 11.9))
my_wide_df <- dcast(data = long_data, subject + sex ~ condition,
value.var = "measurement")
my_wide_df
long_data
head(long_data,5)
summary(flowers)
summary(iris)
flowers <- iris
flowers <- iris
aggregate(flowers[, 4:7], by = list(nitrogen = flowers$nitrogen,
treat = flowers$treat), FUN = mean)
flowers <- iris
View(flowers)
starwars %>%
mutate(name, bmi = mass / ((height / 100)  ^ 2)) %>%
select(name:mass, bmi)
library(tidyr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
# To instal it, simply run the command
install.packages ("sentimentr")
# Load the sentimentr package
library(sentimentr)
# Define the text string to be analyzed
text_data <- "The ambiance of the hotel is nice. I love staying at the hotel"
# Perform sentiment analysis on the text string
sentiment_result <- sentiment(text_data)
# Print the sentiment result
print(sentiment_result)
# Define the text string to be analyzed
text_data <- "The ambiance of the hotel is nice. I love staying at the hotel. But it is kind of horrible weather"
# Perform sentiment analysis on the text string
sentiment_result <- sentiment(text_data)
# Print the sentiment result
print(sentiment_result)
# Define the text string to be analyzed
text_data <- "The ambiance of the hotel is nice. I love staying at the hotel. But it is horrible weather"
# Perform sentiment analysis on the text string
sentiment_result <- sentiment(text_data)
# Print the sentiment result
print(sentiment_result)
